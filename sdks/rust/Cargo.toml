[package]
name = "guillotine-rs"
version = "0.1.0"
edition = "2021"
authors = ["Guillotine Contributors"]
description = "Safe Rust bindings for the Guillotine EVM - a high-performance Ethereum Virtual Machine implementation written in Zig"
documentation = "https://docs.rs/guillotine-rs"
repository = "https://github.com/evmts/guillotine"
homepage = "https://github.com/evmts/guillotine"
license = "MIT OR Apache-2.0"
readme = "README.md"
keywords = ["ethereum", "evm", "blockchain", "ffi", "zig"]
categories = ["cryptography::cryptocurrencies", "api-bindings"]
include = [
    "src/**/*",
    "build.rs",
    "wrapper.h",
    "Cargo.toml",
    "README.md",
    "LICENSE*"
]

[package.metadata.docs.rs]
# Enable all features when building docs on docs.rs
all-features = true
# Build docs for the target that docs.rs uses
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
alloy-primitives = "0.8"
hex = "0.4"
libc = "0.2"

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
revm = { version = "14.0", features = ["c-kzg", "blst"] }

[build-dependencies]
bindgen = "0.69"
cc = "1.0"

[features]
default = []
# Enable tracing support for debugging EVM execution
tracing = []
# Build with optimizations for benchmarking
bench = []

# Hardfork selection features (mutually exclusive)
hardfork-frontier = []
hardfork-homestead = []
hardfork-byzantium = []
hardfork-berlin = []
hardfork-london = []
hardfork-shanghai = []
hardfork-cancun = []

# Optimization strategy features (mutually exclusive)
optimize-fast = []
optimize-small = []
optimize-safe = []

# Configuration features
max-call-depth-256 = []
max-call-depth-512 = []
max-call-depth-2048 = []
stack-size-256 = []
stack-size-512 = []
stack-size-2048 = []
disable-precompiles = []
disable-fusion = []
disable-gas-checks = []
disable-balance-checks = []
large-memory-limit = []
small-memory-limit = []
large-arena = []
small-arena = []

[[bench]]
name = "evm_comparison"
harness = false
required-features = ["bench"]

[lib]
name = "guillotine_ffi"
crate-type = ["cdylib", "rlib"]

[badges]
maintenance = { status = "actively-developed" }

# Platform-specific dependencies
[target.'cfg(unix)'.dependencies]
# Unix-specific dependencies can go here if needed

[target.'cfg(windows)'.dependencies]
# Windows-specific dependencies can go here if needed