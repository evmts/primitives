name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  # Build Zig library for all platforms
  build-zig-lib:
    name: Build Zig Library
    strategy:
      matrix:
        include:
          # macOS builds
          - os: macos-latest
            target: aarch64-macos
            zig_target: aarch64-macos
          - os: macos-latest
            target: x86_64-macos
            zig_target: x86_64-macos

          # Linux builds
          - os: ubuntu-latest
            target: x86_64-linux
            zig_target: x86_64-linux-gnu
          - os: ubuntu-latest
            target: aarch64-linux
            zig_target: aarch64-linux-gnu

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.15.1

      - name: Build Zig library
        run: |
          zig build -Doptimize=ReleaseFast -Dtarget=${{ matrix.zig_target }}

      - name: Upload Zig library artifact
        uses: actions/upload-artifact@v4
        with:
          name: zig-lib-${{ matrix.target }}
          path: |
            zig-out/lib/libguillotine.*
            zig-out/lib/*.a
          retention-days: 1

  # GoReleaser for cross-platform Go builds
  goreleaser:
    name: Release with GoReleaser
    needs: build-zig-lib
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.15.1

      - name: Install cross-compilation toolchains
        run: |
          # Install macOS cross-compilation tools
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu \
            gcc-mingw-w64-x86-64 \
            g++-mingw-w64-x86-64

      - name: Download all Zig library artifacts
        uses: actions/download-artifact@v4
        with:
          path: zig-artifacts

      - name: Organize Zig libraries
        run: |
          mkdir -p zig-out/lib
          find zig-artifacts -name "libguillotine.*" -exec cp {} zig-out/lib/ \;
          find zig-artifacts -name "*.a" -exec cp {} zig-out/lib/ \;
          ls -la zig-out/lib/

      - name: Build Zig library for host platform
        working-directory: .
        run: |
          zig build -Doptimize=ReleaseFast

      - name: Verify Go CLI builds
        working-directory: apps/cli
        run: |
          go mod download
          go build -v .

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --skip=validate
          workdir: apps/cli
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
          CGO_ENABLED: 1

  # Verify Homebrew formula after release
  test-homebrew:
    name: Test Homebrew Formula
    needs: goreleaser
    runs-on: macos-latest
    if: success()

    steps:
      - name: Checkout homebrew-tap
        uses: actions/checkout@v4
        with:
          repository: evmts/homebrew-tap
          token: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}

      - name: Test formula installation
        run: |
          brew tap evmts/tap
          brew install --verbose --build-from-source guillotine
          guil --version

      - name: Verify CLI functionality
        run: |
          # Basic smoke tests
          guil --help
          # Add more CLI tests as needed